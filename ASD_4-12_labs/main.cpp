/*Дана последовательность чисел.
Отсортировать и вывести последовательность чисел, определённым методом.*/
#include <iostream>
#include <vector>
//Функция для обмена элементов местами
void swap(int& a, int& b)
{
    int temp = a;
    a = b;
    b = temp;
}
class Sorting
{
private:
public:
    ///№4 Пузырёк
    void bubbleSort(int arr[], int n)
    {
        for (int i = 0; i < n - 1; i++) //Наружний цикл от 0 до n-1
        {
            for (int j = 0; j < n - i - 1; j++) //Внутренний цикл от 0 до n-i-1
            {
                if (arr[j] > arr[j + 1]) //Если элемент обльше последующего
                {
                    swap(arr[j], arr[j+1]); //Меняем их местами
                }
            }
        }
    }
    ///№5 Вставками
    //Проверяем между собой второй элемент с первым и, если надо, меняем местами.
    // Сравниваем следующую пару элементов и проверяем все пары до нее.
    void insertionSort(int arr[], int n)
    {
        for (int i = 1; i < n; i++)
        {
            int key = arr[i];
            int j = i - 1;
            while (j >= 0 && arr[j] > key)
            {
                arr[j + 1] = arr[j];
                j--;
            }
            arr[j + 1] = key;
        }
    }
    ///№6 Посредством выбора
    //Ищем наименьшее значение в массиве и ставим его на позицию,
    //откуда начали проход. Потом двигаемся на следующую позицию.
    void selectionSort(int arr[], int n)
    {
        for (int i = 0; i < n - 1; i++)
        {
            int minIndex = i;
            for (int j = i + 1; j < n; j++)
            {
                if (arr[j] < arr[minIndex])
                {
                    minIndex = j;
                }
            }
            swap(arr[i], arr[minIndex]);
        }
    }
    ///№7 Шелла
    ///№8 Корневая
    ///№9 Пирамидальная
    ///№10 Слиянием
    ///№11 Быстрая
    //Массив разделяется на подмассивы, которые сортируются и затем сливаются в один.
    //Выбераем элемент, Все значения больше него элемента ставятся после него, остальные — перед.
    ///№12 Внешняя многофазная
};


int main()
{

    return 0;
}
